{
  
    
        "post0": {
            "title": "Other",
            "content": "So your on Windows using python &gt;= 3.8, you have built OpenCV &gt;= 4.6 from source, manually copied .. python path them to your distributions site... directory, added the path to the directory containing opencv.dll and any other shared library dependencies and your seeing something similar to the following. . #os.environ[&quot;OpenCV_LOADER_DEBUG&quot;]=&quot;1&quot; import cv2 . ModuleNotFoundError Traceback (most recent call last) Input In [1], in &lt;cell line: 3&gt;() 1 #import os 2 #os.environ[&#34;OpenCV_LOADER_DEBUG&#34;]=&#34;1&#34; -&gt; 3 import cv2 ModuleNotFoundError: No module named &#39;cv2&#39; . What&#39;s going on? Although the message is quite explicit regarding the cause, it doesn&#39;t really help with finding a solution. In a nutshell python has found .pyd (shared lib), tried and failed to load it because a it can&#39;t find a dependant shared library. Now the advice I have seen online regarding this is to dig out trusty dependancy walker, load the .pyd and see which dependencies the system can&#39;t find. . Now this is solid advice if we had a C++ application and/or we were using python &lt; 3.8 (which uses the system/user path for dll re), however we are not, so even if dependency walker can&#39;t detect any problems we may still be facing the above error. . There is a missing dll, which needs to be added with ... before calling import cv2, now if you have installed the python loader with OpenCV then you will likeliy need to search with .... to find it, however if you have not you may be able to try the quick fix below may work for you . Quick fix when not using the OpenCV python loader . Using the flag OPENCV_SKIP_PYTHON_LOADER=ON prevents the python bindings from being installed when you build install OpenCV, therefore depending on how you installed cv2 there shouldn&#39;t be a cv2 directory inside lib/site-sitepackages and you should something similar to the following . There are multiple reasons that the OpenCV python loader may be missing 1) You didn&#39;t build install . 2) OPENCV_SKIP_PYTHON_LOADER=ON was passed to cmake . 3) The lib/site-packages/cv2 diretory was deleted . Whatever the reason if you are seeing the above error you have likely manually &quot;installed&quot; the python bindings either with . 1) set PYTHONPATH=&quot;OPENCV_BUILD_PATH/lib/python3/&quot; . 2) or by manually copying .... pyd to the lib/site-packages/ . Whichever way this was performed, you will be missing (unless your using a distribution which automatically adds .. directories from the path to the dll search path) . os.add_dll_directory(&quot;OPENCV_BUID_PATH/bin/&quot;); . in this case there will be at least one dll search path which needs to be added. . import os; OPENCV_BUID_PATH = &quot;D:/build/opencv/cuda_11_7_cc_8_6_ff_sym/&quot; os.add_dll_directory(OPENCV_BUID_PATH + &quot;/bin/&quot;); import cv2 . ImportError Traceback (most recent call last) Input In [24], in &lt;cell line: 5&gt;() 3 OPENCV_BUID_PATH = &#34;D:/build/opencv/cuda_11_7_cc_8_6_ff_sym/&#34; 4 os.add_dll_directory(OPENCV_BUID_PATH + &#34;/bin/&#34;); -&gt; 5 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . . If that didn&#39;t work and you are using the CUDA modules you will also need to add os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;);, if that doesn&#39;t work then you need to locate the missing dll and manually add it, seee ... . os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;); import cv2 . ImportError Traceback (most recent call last) Input In [25], in &lt;cell line: 3&gt;() 1 #collapse-output 2 os.add_dll_directory(&#34;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&#34;); -&gt; 3 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . . import sysconfig import os os.listdir(sysconfig.get_paths()[&quot;purelib&quot;]+&quot;/cv2&quot;) . FileNotFoundError Traceback (most recent call last) Input In [13], in &lt;cell line: 3&gt;() 1 import sysconfig 2 import os -&gt; 3 os.listdir(sysconfig.get_paths()[&#34;purelib&#34;]+&#34;/cv2&#34;) FileNotFoundError: [WinError 3] The system cannot find the path specified: &#39;C: Users b mambaforge Lib site-packages/cv2&#39; . In this case you will definitely be missing the directory containing .... and ... and if you built with CUDA you will also be missing ... therefore before doing anything else . You have installed the python loader .",
            "url": "https://cudawarped.github.io/opencv_docs/opencv/cuda/python/2022/07/27/test.html",
            "relUrl": "/opencv/cuda/python/2022/07/27/test.html",
            "date": " • Jul 27, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "ImportError: DLL load failed while importing cv2: The specified module could not be found.",
            "content": ". So your on Windows using python &gt;= 3.8, you have built OpenCV &gt;= 4.6 from source, manually copied .. python path them to your distributions site... directory, added the path to the directory containing opencv.dll and any other shared library dependencies and your seeing something similar to the following. . #os.environ[&quot;OpenCV_LOADER_DEBUG&quot;]=&quot;1&quot; import cv2 . ModuleNotFoundError Traceback (most recent call last) Input In [1], in &lt;cell line: 3&gt;() 1 #import os 2 #os.environ[&#34;OpenCV_LOADER_DEBUG&#34;]=&#34;1&#34; -&gt; 3 import cv2 ModuleNotFoundError: No module named &#39;cv2&#39; . What&#39;s going on? Although the message is quite explicit regarding the cause, it doesn&#39;t really help with finding a solution. In a nutshell python has found .pyd (shared lib), tried and failed to load it because a it can&#39;t find a dependant shared library. Now the advice I have seen online regarding this is to dig out trusty dependancy walker, load the .pyd and see which dependencies the system can&#39;t find. . Now this is solid advice if we had a C++ application and/or we were using python &lt; 3.8 (which uses the system/user path for dll re), however we are not, so even if dependency walker can&#39;t detect any problems we may still be facing the above error. . There is a missing dll, which needs to be added with ... before calling import cv2, now if you have installed the python loader with OpenCV then you will likeliy need to search with .... to find it, however if you have not you may be able to try the quick fix below may work for you . Quick fix when not using the OpenCV python loader . Using the flag OPENCV_SKIP_PYTHON_LOADER=ON prevents the python bindings from being installed when you build install OpenCV, therefore depending on how you installed cv2 there shouldn&#39;t be a cv2 directory inside lib/site-sitepackages and you should something similar to the following . There are multiple reasons that the OpenCV python loader may be missing 1) You didn&#39;t build install . 2) OPENCV_SKIP_PYTHON_LOADER=ON was passed to cmake . 3) The lib/site-packages/cv2 diretory was deleted . Whatever the reason if you are seeing the above error you have likely manually &quot;installed&quot; the python bindings either with . 1) set PYTHONPATH=&quot;OPENCV_BUILD_PATH/lib/python3/&quot; . 2) or by manually copying .... pyd to the lib/site-packages/ . Whichever way this was performed, you will be missing (unless your using a distribution which automatically adds .. directories from the path to the dll search path) . os.add_dll_directory(&quot;OPENCV_BUID_PATH/bin/&quot;); . in this case there will be at least one dll search path which needs to be added. . import os; OPENCV_BUID_PATH = &quot;D:/build/opencv/cuda_11_7_cc_8_6_ff_sym/&quot; os.add_dll_directory(OPENCV_BUID_PATH + &quot;/bin/&quot;); import cv2 . ImportError Traceback (most recent call last) Input In [24], in &lt;cell line: 5&gt;() 3 OPENCV_BUID_PATH = &#34;D:/build/opencv/cuda_11_7_cc_8_6_ff_sym/&#34; 4 os.add_dll_directory(OPENCV_BUID_PATH + &#34;/bin/&#34;); -&gt; 5 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . . If that didn&#39;t work and you are using the CUDA modules you will also need to add os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;);, if that doesn&#39;t work then you need to locate the missing dll and manually add it, seee ... . os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;); import cv2 . ImportError Traceback (most recent call last) Input In [25], in &lt;cell line: 3&gt;() 1 #collapse-output 2 os.add_dll_directory(&#34;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&#34;); -&gt; 3 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . . import sysconfig import os os.listdir(sysconfig.get_paths()[&quot;purelib&quot;]+&quot;/cv2&quot;) . FileNotFoundError Traceback (most recent call last) Input In [13], in &lt;cell line: 3&gt;() 1 import sysconfig 2 import os -&gt; 3 os.listdir(sysconfig.get_paths()[&#34;purelib&#34;]+&#34;/cv2&#34;) FileNotFoundError: [WinError 3] The system cannot find the path specified: &#39;C: Users b mambaforge Lib site-packages/cv2&#39; . In this case you will definitely be missing the directory containing .... and ... and if you built with CUDA you will also be missing ... therefore before doing anything else . You have installed the python loader . When you built OpenCV with cmake you didn&#39;t pass OPENCV_SKIP_PYTHON_LOADER=ON and there is a cv2 directory inside site-packages/lib . import sysconfig; import os; os.listdir(sysconfig.get_paths()[&quot;purelib&quot;]+&quot;/cv2&quot;) . FileNotFoundError Traceback (most recent call last) Input In [7], in &lt;cell line: 3&gt;() 1 import sysconfig; 2 import os; -&gt; 3 os.listdir(sysconfig.get_paths()[&#34;purelib&#34;]+&#34;/cv2&#34;) FileNotFoundError: [WinError 3] The system cannot find the path specified: &#39;C: Users b mambaforge Lib site-packages/cv2&#39; . The python loader script should have added the directory to ... and the CUDA SDK if you built with CUDA modules, so to track down the missing . Built OpenCV with OPENCV_SKIP_PYTHON_LOADER=ON . Using the flag OPENCV_SKIP_PYTHON_LOADER=ON prevents the python bindings from being installed when you build install OpenCV, therefore there shouldn&#39;t be a cv2 directory insidde lib/site-sitepackages and you should see the following . import sysconfig; import os; os.listdir(sysconfig.get_paths()[&quot;purelib&quot;]+&quot;/cv2&quot;) . FileNotFoundError Traceback (most recent call last) Input In [9], in &lt;cell line: 3&gt;() 1 import sysconfig; 2 import os; -&gt; 3 os.listdir(sysconfig.get_paths()[&#34;purelib&#34;]+&#34;/cv2&#34;) FileNotFoundError: [WinError 3] The system cannot find the path specified: &#39;C: Users b mambaforge Lib site-packages/cv2&#39; . then you enter something similar to the below in the command prompt before . set PYTHONPATH=&quot;OPENCV_BUILD_PATH/lib/python3/&quot; . set PATH=&quot;OPENCV_BUID_PATH/bin&quot;;%PATH% . or for my set up in python after PYTHONPATH has been parsed . import os OPENCV_BUID_PATH = &quot;D:/build/opencv/cuda_11_7_cc_8_6_ff_sym/&quot; . import sys sys.path.append(OPENCV_BUID_PATH + &quot;/lib/python3/&quot;) sys.path.append(OPENCV_BUID_PATH + &quot;/bin/&quot;) . Advice is to skip loader it is for stand alone distributions https://github.com/opencv/opencv/issues/13202#issuecomment-439730899 Add python path Therefore the discussion assumes that the above is the method used for adding python etc. . import cv2 . ImportError Traceback (most recent call last) Input In [19], in &lt;cell line: 1&gt;() -&gt; 1 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . What&#39;s going on? Although the message is quite explicit regarding the cause, it doesn&#39;t really help with finding a solution. In a nutshell python has found .pyd (shared lib), tried and failed to load it because a it can&#39;t find a dependant shared library. Now the advice I have seen online regarding this is to dig out trusty dependancy walker, load the .pyd and see which dependencies the system can&#39;t find. . Now this is solid advice if we had a C++ application and/or we were using python &lt; 3.8 (which uses the system/user path for dll re), however we are not, so even if dependency walker can&#39;t detect any problems we may still be facing the above error. . So what to do, well quick a quick and dirty solution is, if you are pretty sure of the folders containing your missing dll&#39;s, just add them to the dll search path in python and see if this reolves your issue. For example if you have built with CUDA then unless you are using something like annaconda, you will need to add the directory containing opencv and hash (bin) and the directory containing the Nvidia shared libs. . you are most likely facing this error becuase the dll&#39;s inside C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/vMAJOR.MINOR/bin cannot be found, so you could try . import os; os.add_dll_directory(OPENCV_BUID_PATH + &quot;/bin/&quot;); os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;); os.add_dll_directory(&quot;D: 3rd_party deps ffmpeg-n5.0-latest-win64-gpl-shared-5.0 bin&quot;) import cv2 . In my case this solved the problem but what do you do if you don&#39;t know exactly what dll&#39;s are missing, well thanks to alec suggestion you can use process monitor https://docs.microsoft.com/en-us/sysinternals/downloads/procmon on windows to track down the problem. With process monitor you can track the files are opened on the call to import cv2 and see exactly which dll can&#39;t be found. . Using Process Monitor fo find the missing dll . First download/extract/run process monitor. On opening you will be presented with the option to filter the output. We only want to see files which are accesses by the python.exe process, therefore the filter options are . On the dropdown select &quot;Process Name&quot; and in the text box type python.exe and click Add - Process explorer will by defualt output for all processes this will reduce this down to just python. . Then &quot;Operation&quot; is CreateFile -&gt; this . Process monitor produces a lot of output, these settings should filter for . To make things easy to read make sure no other python process are running. . . Now start python and before typing import cv2, press the clear button (red trash can) in process monitor to clear any output generated during pythons initialization. . . The output shows that we successfully found cv2.cp..... which is why were not seeing ModuleNotFoundError: No module named &#39;cv2&#39; however it also shows several attempts have been made to locate opencv_img_hash_460.dll and opencv_world460.dll without success even though they are on the search path. Since Python 3.8.... Therefore we add . import os; os.add_dll_directory(OPENCV_BUID_PATH + &quot;/bin/&quot;); . import cv2 . ImportError Traceback (most recent call last) Input In [7], in &lt;cell line: 1&gt;() -&gt; 1 import cv2 ImportError: DLL load failed while importing cv2: The specified module could not be found. . . Now can see that opencv_img_hash_460.dll and opencv_world460.dll after a few attempts were located successfully however we are missing nppc64_11.dll etc. which are all part of the CUDA toolkit. The solution add these as well and . import os; os.add_dll_directory(&quot;C: Program Files NVIDIA GPU Computing Toolkit CUDA v11.7 bin&quot;); os.add_dll_directory(&quot;D: 3rd_party deps ffmpeg-n5.0-latest-win64-gpl-shared-5.0 bin&quot;) import cv2 . and in my case no more errors. At this point if I was still seeing ImportError: DLL load failed while importing cv2: The specified module could not be found I would continue examining the output of process monitor until I get Result SUCCESS for all the .dll files python.exe tries to locate. . Permanantely fixing . Updating OpenCV&#39;s installed python loader . When OpenCV was installed .... only downside is that if you build install OpenCV again your changes will be lost . Creating python loader . If you have installed the python bindings already this will feel a little bit like re-inventing the wheel, but it has the advantage that you can quickly modify a single file to point to access python bindings for a different OpenCV build without too much trouble and your configuration shouldn&#39;t get overidden . Recursion detected, when python .pyd is missing, check new install includes it, if not copy to lib/python to cv2/python-3.9 directory How to init .",
            "url": "https://cudawarped.github.io/opencv_docs/opencv/cuda/python/2022/07/27/opencv_cvs_dll_load_failed.html",
            "relUrl": "/opencv/cuda/python/2022/07/27/opencv_cvs_dll_load_failed.html",
            "date": " • Jul 27, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Opencv4 Cuda Streams",
            "content": "",
            "url": "https://cudawarped.github.io/opencv_docs/2022/06/07/opencv4-cuda-streams.html",
            "relUrl": "/2022/06/07/opencv4-cuda-streams.html",
            "date": " • Jun 7, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://cudawarped.github.io/opencv_docs/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://cudawarped.github.io/opencv_docs/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://cudawarped.github.io/opencv_docs/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://cudawarped.github.io/opencv_docs/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}